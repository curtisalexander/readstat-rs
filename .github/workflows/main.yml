name: readstat-rs

env:
  PACKAGE_NAME: readstat
  CARGO_TERM_COLOR: always

on:
  push:
    tags:
      - "*"

jobs:
  build-linux-gnu:
    runs-on: ubuntu-latest
    env:
      target: x86_64-unknown-linux-gnu
    steps:
      - name: Get git tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.target }}
      - name: Build
        run: cargo build --release && strip target/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: tar czvf target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz --directory=target/release ${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-linux-musl:
    runs-on: ubuntu-latest
    env:
      target: x86_64-unknown-linux-musl
    steps:
      - name: Get git tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.target }}
      - name: Add target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Add musl-tools
        run: sudo apt-get update -y && sudo apt-get upgrade -y && sudo apt-get install build-essential musl musl-dev musl-tools libclang-dev clang -y
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-musl && strip target/${{ env.target }}/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: tar czvf target/${{ env.target }}/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz --directory=target/${{ env.target }}/release ${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/${{ env.target }}/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-win:
    runs-on: windows-latest
    env:
      target: x86_64-pc-windows-msvc
    steps:
      - name: Get git tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.target }}
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}\llvm
          key: llvm-17.0.2
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          # versions - https://github.com/KyleMayes/install-llvm-action/blob/master/index.ts
          version: "17.0.2"
          directory: ${{ runner.temp }}\llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Build
        run: |
            $env:LIBCLANG_PATH = "${{ runner.temp }}\llvm\bin"
            cargo build --release
      - name: Zip
        run: Compress-Archive -Path target\release\${{ env.PACKAGE_NAME }}.exe -DestinationPath target\release\${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.zip  -CompressionLevel Optimal
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos-x86:
    runs-on: macos-latest
    env:
      target: x86_64-apple-darwin
    steps:
      - name: Get git tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.target }}
      - name: Build
        run: cargo build --release && strip target/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: tar czvf target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz --directory=target/release ${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos-arm:
    runs-on: macos-latest
    env:
      target: aarch64-apple-darwin
    steps:
      - name: Get git tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.target }}
      - name: Build
        run: cargo build --release && strip target/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: tar czvf target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz --directory=target/release ${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
