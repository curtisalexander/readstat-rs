name: readstat-rs

env:
  PACKAGE_NAME: readstat
  CARGO_TERM_COLOR: always

on:
  push:
    tags:
      - "*"

jobs:
  build-linux-gnu:
    runs-on: ubuntu-latest
    env:
      target: x86_64-unknown-linux-gnu
    steps:
      - name: Get git tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.target }}
          default: true
          override: true
      - name: Build
        run: cd readstat && cargo build --release && strip target/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: cd readstat && tar czvf target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz --directory=target/release ${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            readstat/target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-linux-musl:
    runs-on: ubuntu-latest
    env:
      target: x86_64-unknown-linux-musl
    steps:
      - name: Get git tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.target }}
          default: true
          override: true
      - name: Add target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Add musl-tools
        run: sudo apt-get update -y && sudo apt-get upgrade -y && sudo apt-get install build-essential musl musl-dev musl-tools libclang-dev clang -y
      - name: Build
        run: cd readstat && cargo build --release --target x86_64-unknown-linux-musl && strip target/${{ env.target }}/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: cd readstat && tar czvf target/${{ env.target }}/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz --directory=target/${{ env.target }}/release ${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            readstat/target/${{ env.target }}/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-win:
    runs-on: windows-latest
    env:
      target: x86_64-pc-windows-msvc
    steps:
      - name: Get git tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        shell: bash
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.target }}
          default: true
          override: true
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}\llvm
          key: llvm-12.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12.0"
          directory: ${{ runner.temp }}\llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Build
        run: |
            $env:LIBCLANG_PATH = "${{ runner.temp }}\llvm\lib"
            cd readstat && cargo build --release
      - name: Zip
        run: Compress-Archive -Path readstat\target\release\${{ env.PACKAGE_NAME }}.exe -DestinationPath readstat\target\release\${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.zip  -CompressionLevel Optimal
        shell: powershell
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            readstat\target\release\${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-mac:
    runs-on: macos-latest
    env:
      target: x86_64-apple-darwin
    steps:
      - name: Get git tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.target }}
          default: true
          override: true
      - name: Build
        run: cd readstat && cargo build --release && strip target/release/${{ env.PACKAGE_NAME }}
      - name: Zip
        run: cd readstat && tar czvf target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz target/release/${{ env.PACKAGE_NAME }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            readstat/target/release/${{ env.PACKAGE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
